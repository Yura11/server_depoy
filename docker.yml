---
- name: Install Docker on Ubuntu Server
  hosts: ec2_instances
  become: true
  gather_facts: yes
  ignore_errors: yes
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker dependencies
      apt:
        name:
          - docker.io
          - python3-pip
        state: present

    - name: Install Docker Compose
      pip:
        name: docker-compose
        state: present
        executable: pip3

    - name: Clone Git repository
      git:
        repo: https://github.com/Yura11/docker_deploy.git
        dest: /home/docker_deploy

    - name: Build Docker image
      docker_image:
        source: "build"
        build:
          path: /home/docker_deploy
        name: server_build
        tag: 1.0

    - name: Run Docker container
      docker_container:
        name: server_build_
        image: server_build:1.0
        state: started
        ports:
          - "7777:7777"
        detach: true

    - name: Run Prometheus, Node Exporter, and Grafana containers
      docker_container:
        name: "{{ item.name }}"
        image: "{{ item.image }}"
        container_name: "{{ item.container_name }}"
        ports: "{{ item.ports }}"
        command: "{{ item.command }}"
        volumes: "{{ item.volumes }}"
        depends_on: "{{ item.depends_on }}"
        state: started
      loop:
        - name: prometheus
          image: prom/prometheus:latest
          container_name: prometheus
          ports:
            - "9090:9090"
          command:
            - --config.file=/etc/prometheus/prometheus.yml
          volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
          depends_on:
            - node-exporter
        - name: node-exporter
          image: prom/node-exporter:latest
          container_name: node-exporter
          restart: unless-stopped
          expose:
            - 9100
        - name: grafana
          image: grafana/grafana
          container_name: grafana
          ports:
            - "3000:3000"
          environment:
            - GF_SECURITY_ADMIN_PASSWORD=password
          depends_on:
            - prometheus
